
node oven (finish, start, cold, temp_ok, c_oven: bool) returns (nameOven, powerOven: int)
let
	automaton

		state Off do
			nameOven = 0;
			powerOven = 0;
		unless start & not c_oven then Standby
			| start & c_oven then Heat

		state Standby do
			nameOven = 1;
			powerOven = 0;
		unless c_oven then Heat

		state Heat do
			nameOven = 2;
			powerOven = 1500;
		unless finish then Off
			| temp_ok then Maintain

		state Maintain do
			nameOven = 3;
			powerOven = 300;
		unless cold & c_oven then Reheat
			| finish then Off

		state Reheat do
			nameOven = 4;
			powerOven = 1000;
		unless finish then Off
			| temp_ok then Maintain
	end
tel

node rad(up1, down1, up2, down2, c1, c2: bool) returns (nameRad, powerRad: int)
let
	automaton
		state Off do
			nameRad = 0;
			powerRad = 0;
		unless up1 or not c1 then Frost

		state Frost do
			nameRad = 1;
			powerRad = 300;
		unless down1 or not c1 then Off
			| up1 & c1 then Eco
			| up2 & c2 then High

		state Eco do
			nameRad = 2;
			powerRad = 1500;
		unless down1 or not c1 then Frost
			| up2 & c2 then High

		state High do
			nameRad = 3;
			powerRad = 2000;
		unless down1 or not c1 then Eco
			| down2 or not c2 then Frost
	end
tel


node washingmachine(end_wash, startWash, c_wash: bool) returns (nameWash, powerWash: int)
let
	automaton
		state Off do
			nameWash = 0;
			powerWash = 0;
		unless startWash then Waterfill

		state Waterfill do
			nameWash = 1;
			powerWash = 15;
		unless end_wash & c_wash then Washing
			| end_wash & not c_wash then Standby

		state Standby do
			nameWash = 2;
			powerWash = 0;
		unless c_wash then Washing

		state Washing do
			nameWash = 3;
			powerWash = 250;
		unless end_wash then Rinse

		state Rinse do
			nameWash = 4;
			powerWash = 200;
		unless end_wash then Spin

		state Spin do
			nameWash = 5;
			powerWash = 800;
		unless end_wash then Off
	end
tel

node coresystem(finish, start, cold, temp_ok, up1, down1, up2, down2, end_wash, startWash: bool) returns (nameOven, powerOven, nameRad, powerRad, nameWash, powerWash: int)
    contract
    	var 
    		regra5: bool;
    		total: int;
    	let
    		total = powerOven + powerRad + powerWash;
    		regra5 = (5000 >= total)
    	tel
    	enforce regra5
 			with (c1, c2, c_wash, c_oven: bool)
let
    (nameOven, powerOven) = inlined oven(finish, start, cold, temp_ok, c_oven);
    (nameRad, powerRad) = inlined rad(up1, down1, up2, down2, c1, c2);
    (nameWash, powerWash) = inlined washingmachine(end_wash, startWash, c_wash);
tel
